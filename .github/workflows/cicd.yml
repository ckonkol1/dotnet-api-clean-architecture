name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - '*'
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_DIR: './src/PlantTracker.sln'

jobs:
  build:
    name: Run Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_DIR }}
        
      - name: Build
        run: dotnet build ${{ env.SOLUTION_DIR }} --no-restore --configuration Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/bin/Release/
            **/obj/  

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    
    # Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
            
    - name: Run unit tests
      run: |
        dotnet test ${{ env.SOLUTION_DIR }} \
          --no-build \
          --configuration Release \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --logger "trx;LogFileName=test-results.trx" \
          --results-directory TestResults

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          TestResults/**/*.trx
          TestResults/**/*.xml