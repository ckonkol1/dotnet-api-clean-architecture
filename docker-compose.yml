services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    working_dir: /home/dynamodblocal
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    networks:
      - default
    healthcheck:
      test: |
        timeout 10s bash -c '</dev/tcp/localhost/8000' || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
 
  dynamodb-init:
    image: amazon/aws-cli:latest
    container_name: dynamodb-init
    depends_on:
      dynamodb-local:
        condition: service_healthy
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: ["/bin/sh"]
    command: ["-c", "/scripts/init-dynamodb.sh"]
    restart: "no"

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local

volumes:
  dynamodb-data:

# services:
#   dynamodb-local:
#     command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
#     image: "amazon/dynamodb-local:latest"
#     container_name: dynamodb-local
#     ports:
#       - "8000:8000"
#     restart: always
#     volumes:
#       - "./data:/home/dynamodblocal/data"
#     working_dir: /home/dynamodblocal

#   dynamodb: 
#     image: "aaronshaf/dynamodb-admin"
#     container_name: dynamodb-admin
#     depends_on:
#       - dynamodb-local
#     restart: always
#     ports:
#       - "8001:8001"
#     environment:
#       - DYNAMO_ENDPOINT=http://dynamodb-local:8000
#       - AWS_REGION=ap-southeast-1